{"version":3,"sources":["Header.js","Footer.js","BrowseDates.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","footercontent","browseDates","places","map","place","Name","SkyscannerCode","CountryName","CityName","CityId","PlaceId","carriers","carrier","quotes","quote","currencies","currency","Symbol","MinPrice","CarrierId","App","state","apiDidNotWork","eachPlace","query","destination","location","outboundDate","eachCarrier","eachDate","eachQuote","eachCurrency","handleSubmit","bind","apiCall","handleCurrency","event","this","setState","target","value","preventDefault","a","reqOptions","method","headers","process","fetch","response","json","Places","Currencies","Carriers","Dates","Quotes","console","log","style","color","onSubmit","type","name","onChange","e","required","handleDestination","handleLocation","handleOutboundDate","placeholder","handleOnChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527ce7d8.chunk.js","sourcesContent":["import React from 'react';\nimport './css/Header.css';\n\nfunction Header(props) {\n        return(\n            <div className=\"header-content\">\n                <h1>{props.title}</h1>\n            </div>\n        )\n}\n\nexport default Header;","import React from \"react\";\nimport './css/Footer.css';\n\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer-content\">\n            <p>{props.footercontent}</p>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport './css/BrowseDates.css';\n\n\n\nfunction browseDates(props) {\n    // const priceFix = carrier.CarrierId === quote.OutboundLeg.CarrierIds ? \n    return(\n        <div>\n            <table className=\"airport-labels\">\n                <thead>\n                    <tr>\n                        <th>Airport Name</th>\n                        <th>Code</th> \n                        <th>Country</th>\n                        <th>City</th>\n                        <th>City ID</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.places.map(place => {\n                            return(        \n                                <tr key={place.PlaceId}> \n                                    <td>{place.Name}</td>\n                                    <td>{place.SkyscannerCode}-sky</td>\n                                    <td>{place.CountryName}</td>\n                                    <td>{place.CityName}</td>\n                                    <td>{place.CityId}</td> \n                                </tr>   \n                            )\n                        })}\n                </tbody>\n            </table>\n                                <table className=\"airport-labels2\">\n                                    <thead>\n                                        <tr>\n                                            <th>Available Airlines</th>\n                                            <th>Price</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    {props.carriers.map(carrier => {\n                                            return(\n                                                <tr key={carrier.CarrierId}>\n                                                     <td>{carrier.Name}</td>\n                                                {props.quotes.map(quote => {\n                                                    return(  \n                                                        <td>{props.currencies.map(currency => {\n                                                            return(  \n                                                                <td>{currency.Symbol}</td>\n                                                                                                                                                        \n                                                                )\n                                                        })}{quote.MinPrice}</td> // not sure why the prices are showing as two prices per airline. should be one price per airline :/\n                                                                                                                                                \n                                                        )\n                                                })}\n                                                 </tr>\n                                                                        \n                                                                )\n                                            })}\n                                    </tbody>\n                                </table>\n            </div>\n        )\n}\n\nexport default browseDates;","import React, {Component} from 'react'; \nimport './App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport BrowseDates from './BrowseDates';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      apiDidNotWork: false,\n      eachPlace: [],\n      query: \"\",\n      currency: \"USD\",\n      destination: \"LAX-sky\",\n      location: \"SFO-sky\",\n      outboundDate: \"2021-03-21\",\n      eachCarrier: [],\n      eachDate: [],\n      eachQuote: [],\n      eachCurrency: []\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.apiCall = this.apiCall.bind(this)\n    this.handleCurrency = this.handleCurrency.bind(this) \n  }\n  handleOnChange(event) {\n    this.setState({query: event.target.value})\n  }\n  handleCurrency(event) {\n    this.setState({currency: event.target.value})\n  }\n  handleDestination(event) {\n    this.setState({destination: event.target.value})\n  }\n  handleLocation(event) {\n    this.setState({location: event.target.value})\n  }\n  handleOutboundDate(event) {\n    this.setState({outboundDate: event.target.value})\n  }\n  handleSubmit(event) {\n    event.preventDefault()\n    this.apiCall(this.state.query)\n    }\n\n  async apiCall() {\n    const reqOptions = {\n        method: 'GET',\n        headers: {\n          \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n\t        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n\t        \"useQueryString\": true\n        }\n    }\n    let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/\"\n     + this.state.currency + \"/\" + \"en-US/\" \n     + this.state.location + \"/\" \n     + this.state.destination + \"/\"\n     + this.state.outboundDate \n     + \"/?query=\" + this.state.query, reqOptions)\n    response = await response.json()\n    this.setState({eachPlace: response.Places})\n    this.setState({eachCurrency: response.Currencies})\n    this.setState({eachCarrier: response.Carriers})\n    this.setState({eachDate: response.Dates})\n    this.setState({eachQuote: response.Quotes})\n    //console.log(this.state.eachPlace)\n    //console.log(this.state.eachCarrier)\n    //console.log(this.state.eachDate)\n    console.log(this.state.eachQuote)\n  }\n\n  render() {\n    if (this.state.apiDidNotWork === false) {  \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <Header title=\"Airport Flight Search\"/>\n        <h4 style={{color: \"red\"}}>Please Fill Out These Inputs Before Submitting</h4>\n        <div className=\"search-params\">\n            <form className=\"currency-search\" onSubmit={this.handleSubmit}>\n            <label>Currency (ex: USD)  </label>\n              <input type=\"text\" name=\"currency\" onChange={(e)=>this.handleCurrency(e)} value={this.state.currency} required/>\n            </form>\n            <form className=\"currency-search\" onSubmit={this.handleSubmit}>\n            <label>Destination (ex: LAX-sky)  </label>\n              <input type=\"text\" name=\"destination\" onChange={(e)=>this.handleDestination(e)} value={this.state.destination} required/>\n            </form>\n            <form className=\"currency-search\" onSubmit={this.handleSubmit}>\n            <label> Current Location (ex: SFO-sky)  </label>\n              <input type=\"text\" name=\"destination\" onChange={(e)=>this.handleLocation(e)} value={this.state.location} required/>\n            </form>\n            <form className=\"currency-search\" onSubmit={this.handleSubmit}>\n            <label>Outbound Date (ex: 2021-03-21)  </label>\n              <input type=\"text\" name=\"destination\" onChange={(e)=>this.handleOutboundDate(e)} value={this.state.outboundDate} required/>\n            </form>\n        </div>\n \n        <div className=\"search-div\" onSubmit={this.handleSubmit}>\n          <form onSubmit={this.handleSubmit}>\n            <input type=\"text\" placeholder=\"Search any State\" name=\"search\" onChange={(e)=>this.handleOnChange(e)} value={this.state.query} required/>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n        <div>\n          <BrowseDates places={this.state.eachPlace} quotes={this.state.eachQuote} carriers={this.state.eachCarrier} currencies={this.state.eachCurrency}/>\n        </div>\n        </header>\n        <Footer footercontent=\"Flight Search Application\"/>\n      </div>\n    );\n    } else {\n    }\n  }  \n  }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}